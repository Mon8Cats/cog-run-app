steps:
  # Step 1: Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Docker Image'
    args: ['build', '-t', 'us-central1-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/${_APP_NAME}:$SHORT_SHA', '.']

  # Step 2: Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Docker Image'
    args: ['push', 'us-central1-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/${_APP_NAME}:$SHORT_SHA']

  # Step 3: Debug Step - Check environment variables before deployment
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Debug Environment Variables'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        echo "Active Service Account:"
        gcloud auth list
        echo "Debugging Environment Variables:"
        echo "PROJECT_ID: ${_PROJECT_ID}"
        echo "PROJECT_NUMBER: ${_PROJECT_NUMBER}"
        echo "INSTANCE_CONNECTION_NAME: ${_INSTANCE_CONNECTION_NAME}"

        # Explicitly set the project context
        gcloud config set project ${_PROJECT_ID}

        echo "Checking Authentication:"
        gcloud auth print-access-token

        gcloud iam roles describe roles/iam.serviceAccountTokenCreator
        gcloud auth list

        echo "Testing secret access..."
        gcloud secrets versions access latest --secret=db-user
        gcloud secrets versions access latest --secret=db-password
        echo "secret fetched?"

        # Fetch secrets from Secret Manager
        DB_USER=$(gcloud secrets versions access latest --secret=db-user)
        #echo "Fetched DB_USER: $DB_USER" 
        DB_PASSWORD=$(gcloud secrets versions access latest --secret=db-password)
        #echo "Fetched DB_USER: $DB_USER" 
        


  # Step 4: Deploy the image to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy to Cloud Run'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'my-flask123'
      - '--image=us-central1-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/${_APP_NAME}:$SHORT_SHA'
      - '--region=us-central1'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--set-env-vars=DB_USER=${_DB_USER},DB_PASSWORD=${_DB_PASSWORD},DB_HOST=${_DB_HOST},DB_PORT=${_DB_PORT},DB_NAME=${_DB_NAME}'



  # Step 5: Verify the deployment status
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Check Deployment Status'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'services'
      - 'describe'
      - 'my-flask123'
      - '--region=us-central1'

      
images:
  - 'us-central1-docker.pkg.dev/${_PROJECT_ID}/${_ARTIFACT_REPO}/${_APP_NAME}:$SHORT_SHA'

timeout: '1200s'

logsBucket: "gs://${_LOG_BUCKET}"

substitutions:
  _APP_NAME: "my-flask1"
  _ARTIFACT_REPO: "spn-art"
  _CUSTOM_SERVICE_ACCOUNT: "sa-cloud-run@spn-run.iam.gserviceaccount.com"
  _INSTANCE_CONNECTION_NAME: "spn-run:us-central1:spn-sql"
  _DB_USER : "db-user"
  _DB_PASSWORD : "db-password"
  _DB_NAME : "spn-db"
  _DB_HOST : "/cloudsql/spn-run:us-central1:spn-sql"
  _DB_PORT : "5432"

